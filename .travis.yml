dist: xenial
sudo: required
os: linux
language: minimal
before_install:
- curl -fsSL https://get.docker.com | sh
- echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
- mkdir -p $HOME/.docker
- echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
- sudo service docker restart
install:
- docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
- docker buildx create --name xbuilder --use
jobs:
  include:
  - stage: build-branch
    if: branch != master && tag IS blank
    script: scripts/build.sh ${TRAVIS_BRANCH} linux/amd64 false
  - stage: build-master
    if: branch = master
    script: scripts/build.sh ${TRAVIS_BRANCH} linux/amd64 true
  - stage: build-tag
    if: tag IS present
    script: scripts/build.sh ${TRAVIS_BRANCH} linux/amd64,linux/arm,windows/amd64,darwin/amd64
      true
  - stage: deploy
    if: tag IS present
    deploy:
    - provider: releases
      api_key:
        secure: pA6f7sWevWtl0Du7JP2Bw3UU72b+GXMPkjD/c25uthhMhQkCt1tKOOGR5Rv8+PrzX+FYm1NrEzLQV4EMa+UigNf4gUCampJ0JspuMJZ5q3pTKAgKn23Z60M66MXb5Mg18/bmvRs2yH8H+5ul0pnqokr4FYsi3opVaD3rHzALh5nkPQBxc5DlLTzXCgkM9yvUpXbj6ybk9bToMPZoQBn5B6X1NoUIJEaOrGBzmnolIRrgMSiz4gaDixKY+pJGVXDJ/mU8eLu7CH29SgEKUGLsYwhkU7FiQvYfZuGOydoTTZx+831qvaUuMXoCxiZ25jUUfFZmrLrS94Otgc5u82HirNC8675L9vsKDp7RcyUXc9fTbCRH702GRrZk1yHAGsdIEJUIfJvYvT0XiWchEDR7QNnerlg54RIerWG+ls0qoiHIkZ5rppXOVy4s8gOixypZTUWhjqI3B6Yb6KnH6R94Qczp+BC3BKuc0/KdieuC3hAckgefgOLVm9eyFehPwbi/FwEQOhEZIzSAVL0RrWDIVFWtoZGE7grhLr/TapbcP/NDBBo1OomaCKFmsGhribn0/Bt9X92bciwGAvyMN5y5ySOMmm6+sU+RercvRMqkUy7aJYcZwCVh1d3IQGP6lIHMLASym4EpcUdcn0jRPfSBhF+3C892fc3i9kEwgE2SFtU=
      file_glob: true
      file:
      - bin/*.tar.gz
      - bin/*.zip
      skip_cleanup: true
env:
  global:
  - secure: RDfkg1NiekMOUwXkmBFPBpBMnYzN5LcWPY7A/S3SyKKeMV9jLjJgKFmNiwZF98HN6cPHzPY/RhFgFZffIddTG0aPz1dTnMmGxoYLlYlCtKaijj6QmeQ3Txezi37hRsBIfJoqTX+iCTZiz0urO2jjS0oHpQsj1i+XpVLJd+Vfw3XM6/Am2O0TfmeTL74BIGCQowzkL4cIRkNFXWoskeyuEY0rtkIdX1NtkaNyyi9843LG+XVdQ+48n0krcEBAvXjw76WywbqCilJlvpiw4MLRH3OJmvI41zPMX8/LDuh+B7hi+Y30dZOIL+tk7SQRUJ3UFftEMyHYLl9mDgbfKIBOM8lu7/LnxjHP4vilQ5ImDKl7pSiO2mGZURIGFpnPCbVt5TiADwkuSfqYYH1Sif4qwiqLPSB5WyhQ4B4biCkrkLhI5YLGKlUxULvn5EVokIskVE98ygBtxLxxOKQEtxw2F6L75SPlKWfVwwoSLQOHu+Rdm7oB5arUA5EMMY0fgfS+dxxpNgBBsuuJo3BPE/wk57uBf9xeIwhWrVcl+O1xA0m5EgSQuyJ1BYwFyyjjBYZTtxUhA82WD6XJoaifUzkxHXvBineKul4Phxl0eaORgxI5QBNHaNcdEVHGNfvnD7waBimQnuPlbW9pNHL0BvRpieUtqL3YmzuMrBK4SVX33NM=
  - secure: PHx2gwL/sCEWFr/aLngAgs82hHntMUrplABgPM5poRzdkfDdbpVXSU1u/wPn4OBFTSwuEBlgdcywaB93+UUWcc1XGHabXLMBs6QlI9FLjSGaFvaNbEZd1WUdaQa0oEn3glLGXc56k9730+2tjJpsHDUPE1oYu0XffDAsXqiCcwARXD/FY+raVNaQhULXwi8X2vdZvzrJEIV+DChRipTdqWgc//6ObmxQnvdCPrZUBEG+opIdO/NWSr5Dw1jU3LOciFqDIpk0WjLippeyDksM9vJn4aR4G8DdpJ9Nfj668Rln8GwILNCtt9VZYUj7+SIfBBAOsSINd7mcLdXx9jvSJzBmnBOEPK60EuyWSEehy3n6GCSx5VYSsBegqK8NbY4qpqG0s7Q2yy2aXfVybMYPtJqj0ELkDgd6zdzOW5Fkckk7EjcRs2VwXAND0KCq4nlqa4yZ97B/foYK4Q80vx/EyRUykKODNrpPFZKDbb9j+yImbUjFilZ0ZJeOAxMSFNfaoE1CBraiN7yMdqKCimGgcwJPKuJONEDS0tp1jIoll2MhKOEM8c+EDFSglcuRq9RkEEaF5PFS1+gYF2Ueme0vu0WiV0PQBoWmw3gHZteHXGbvUrmVoJwUxIkWA5hePgJ0Kb2K7Kxw7KFWwkd17Jw+mCKIuIfGZoPy5DCSlyRffh4=
