dist: xenial
sudo: required
os: linux
language: minimal
before_install:
- curl -fsSL https://get.docker.com | sh
- echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
- mkdir -p $HOME/.docker
- echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
- sudo service docker restart
install:
- docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
- docker buildx create --name xbuilder --use
jobs:
  include:
  - stage: build-branch
    if: branch != master && tag IS blank
    script: scripts/build.sh ${TRAVIS_BRANCH} linux/amd64 false
  - stage: build-master
    if: branch = master
    script: scripts/build.sh ${TRAVIS_BRANCH} linux/amd64 true
  - stage: build-tag
    if: tag IS present
    script: scripts/build.sh ${TRAVIS_BRANCH} linux/amd64,linux/arm,linux/arm64,windows/amd64,darwin/amd64
    deploy:
    - provider: releases
      api_key:
        secure: GnXFfK2E4MY7hhmPO9GSFumqLirZ8LMGQ6P5SHRqd+VI953kry7S+I+LdmKnQlXSGBdNX2PAO+llgKUd5FxUrLx17b1N7XWcnzt3pD7D9TdXw+Epe4gqVf1fETzgrVIeSD4eBVQpQ5zCpB3dMqtk9KQyBNplgcp4ea+gLK8aRdhXXteQqyYp5n/HxXsDIJt4PDU5k004T01mNpYVI+TkPa88WgCB2XOHX8ikXQid2NZXk9G2NkzhSODnmWf3Cbe4IuyqWYmF9Qh5NiRNqJcvx3iQHsaZwdNOruS32rfon7c865aHrxiH4WPCc+pcsJ8+Ywa8eVoKFwGccG5wn7f7TUue+8brwMrGhFRrOQjAhGnvDYqgHf5uvuR69Lvu9V3Un+XCaS77oX09clECx2ql2P3JaFQjkKhFjAXrY+1pTkRHZ+myCBeTNUH1FO8zE4qjQhYnKam1xxS8cmnulKoK/O4bB8DHdPIEA9xg1REB4XJ1ekbYvEyVEqHo77nHxxmAnt6y4tISPcnlJ3+IznybNGxf/tmWrLA8AMC/DpSVRXiWRe9hyT/CZZ2al/nzJnLC05FTEtzue/ZRHp3pDBGCHBPXZZnuWLZW5jN+BXMznNvCOGuK8dQnuhoDRqTGyl4DpdahJirdo00+fIh/TpAu3kei741JqPwLW/vUDCaD790=
      file_glob: true
      file:
      - bin/*.tar.gz
      - bin/*.zip
      skip_cleanup: true
      on:
        tags: true
env:
  global:
  - secure: RDfkg1NiekMOUwXkmBFPBpBMnYzN5LcWPY7A/S3SyKKeMV9jLjJgKFmNiwZF98HN6cPHzPY/RhFgFZffIddTG0aPz1dTnMmGxoYLlYlCtKaijj6QmeQ3Txezi37hRsBIfJoqTX+iCTZiz0urO2jjS0oHpQsj1i+XpVLJd+Vfw3XM6/Am2O0TfmeTL74BIGCQowzkL4cIRkNFXWoskeyuEY0rtkIdX1NtkaNyyi9843LG+XVdQ+48n0krcEBAvXjw76WywbqCilJlvpiw4MLRH3OJmvI41zPMX8/LDuh+B7hi+Y30dZOIL+tk7SQRUJ3UFftEMyHYLl9mDgbfKIBOM8lu7/LnxjHP4vilQ5ImDKl7pSiO2mGZURIGFpnPCbVt5TiADwkuSfqYYH1Sif4qwiqLPSB5WyhQ4B4biCkrkLhI5YLGKlUxULvn5EVokIskVE98ygBtxLxxOKQEtxw2F6L75SPlKWfVwwoSLQOHu+Rdm7oB5arUA5EMMY0fgfS+dxxpNgBBsuuJo3BPE/wk57uBf9xeIwhWrVcl+O1xA0m5EgSQuyJ1BYwFyyjjBYZTtxUhA82WD6XJoaifUzkxHXvBineKul4Phxl0eaORgxI5QBNHaNcdEVHGNfvnD7waBimQnuPlbW9pNHL0BvRpieUtqL3YmzuMrBK4SVX33NM=
  - secure: PHx2gwL/sCEWFr/aLngAgs82hHntMUrplABgPM5poRzdkfDdbpVXSU1u/wPn4OBFTSwuEBlgdcywaB93+UUWcc1XGHabXLMBs6QlI9FLjSGaFvaNbEZd1WUdaQa0oEn3glLGXc56k9730+2tjJpsHDUPE1oYu0XffDAsXqiCcwARXD/FY+raVNaQhULXwi8X2vdZvzrJEIV+DChRipTdqWgc//6ObmxQnvdCPrZUBEG+opIdO/NWSr5Dw1jU3LOciFqDIpk0WjLippeyDksM9vJn4aR4G8DdpJ9Nfj668Rln8GwILNCtt9VZYUj7+SIfBBAOsSINd7mcLdXx9jvSJzBmnBOEPK60EuyWSEehy3n6GCSx5VYSsBegqK8NbY4qpqG0s7Q2yy2aXfVybMYPtJqj0ELkDgd6zdzOW5Fkckk7EjcRs2VwXAND0KCq4nlqa4yZ97B/foYK4Q80vx/EyRUykKODNrpPFZKDbb9j+yImbUjFilZ0ZJeOAxMSFNfaoE1CBraiN7yMdqKCimGgcwJPKuJONEDS0tp1jIoll2MhKOEM8c+EDFSglcuRq9RkEEaF5PFS1+gYF2Ueme0vu0WiV0PQBoWmw3gHZteHXGbvUrmVoJwUxIkWA5hePgJ0Kb2K7Kxw7KFWwkd17Jw+mCKIuIfGZoPy5DCSlyRffh4=
